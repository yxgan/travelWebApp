{"ast":null,"code":"import React,{useState,useEffect}from'react';import{TextField,Button,Container,Box,Typography,Snackbar}from'@mui/material';import{useNavigate,useParams}from'react-router-dom';import{saveItinerary}from'../services/itineraryService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CreateItinerary(){const navigate=useNavigate();const{id}=useParams();const[open,setOpen]=useState(false);const[itinerary,setItinerary]=useState({destination:'',startDate:'',endDate:'',activities:[]});useEffect(()=>{if(id){const itineraries=JSON.parse(localStorage.getItem('itineraries')||'[]');const existingItinerary=itineraries.find(i=>i.id===Number(id));if(existingItinerary){setItinerary(existingItinerary);}}},[id]);const handleSubmit=e=>{e.preventDefault();try{if(id){const itineraries=JSON.parse(localStorage.getItem('itineraries')||'[]');const updatedItineraries=itineraries.map(i=>i.id===Number(id)?{...itinerary}:i);localStorage.setItem('itineraries',JSON.stringify(updatedItineraries));}else{saveItinerary(itinerary);}setOpen(true);setTimeout(()=>{navigate('/itineraries');},2000);}catch(error){console.error('Error saving itinerary:',error);}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"sm\",children:[/*#__PURE__*/_jsx(Box,{sx:{mt:4,mb:4},children:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Create New Itinerary\"})}),/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,sx:{mt:4},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Destination\",value:itinerary.destination,onChange:e=>setItinerary({...itinerary,destination:e.target.value}),margin:\"normal\",required:true}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"date\",label:\"Start Date\",InputLabelProps:{shrink:true},value:itinerary.startDate,onChange:e=>setItinerary({...itinerary,startDate:e.target.value}),margin:\"normal\",required:true}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"date\",label:\"End Date\",InputLabelProps:{shrink:true},value:itinerary.endDate,onChange:e=>setItinerary({...itinerary,endDate:e.target.value}),margin:\"normal\",required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",sx:{mt:2},fullWidth:true,children:id?'Update Itinerary':'Create Itinerary'})]}),/*#__PURE__*/_jsx(Snackbar,{open:open,autoHideDuration:2000,message:id?\"Itinerary updated successfully!\":\"Itinerary saved successfully!\",anchorOrigin:{vertical:'bottom',horizontal:'center'}})]});}export default CreateItinerary;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Container","Box","Typography","Snackbar","useNavigate","useParams","saveItinerary","jsx","_jsx","jsxs","_jsxs","CreateItinerary","navigate","id","open","setOpen","itinerary","setItinerary","destination","startDate","endDate","activities","itineraries","JSON","parse","localStorage","getItem","existingItinerary","find","i","Number","handleSubmit","e","preventDefault","updatedItineraries","map","setItem","stringify","setTimeout","error","console","maxWidth","children","sx","mt","mb","variant","component","gutterBottom","onSubmit","fullWidth","label","value","onChange","target","margin","required","type","InputLabelProps","shrink","color","autoHideDuration","message","anchorOrigin","vertical","horizontal"],"sources":["C:/Users/xiang/travelWebApp/src/pages/CreateItinerary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Container, Box, Typography, Snackbar } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { saveItinerary } from '../services/itineraryService';\r\n\r\nfunction CreateItinerary() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [open, setOpen] = useState(false);\r\n  const [itinerary, setItinerary] = useState({\r\n    destination: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    activities: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const itineraries = JSON.parse(localStorage.getItem('itineraries') || '[]');\r\n      const existingItinerary = itineraries.find(i => i.id === Number(id));\r\n      if (existingItinerary) {\r\n        setItinerary(existingItinerary);\r\n      }\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (id) {\r\n        const itineraries = JSON.parse(localStorage.getItem('itineraries') || '[]');\r\n        const updatedItineraries = itineraries.map(i => \r\n          i.id === Number(id) ? { ...itinerary } : i\r\n        );\r\n        localStorage.setItem('itineraries', JSON.stringify(updatedItineraries));\r\n      } else {\r\n        saveItinerary(itinerary);\r\n      }\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        navigate('/itineraries');\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error('Error saving itinerary:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 4, mb: 4 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Create New Itinerary\r\n        </Typography>\r\n      </Box>\r\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 4 }}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Destination\"\r\n          value={itinerary.destination}\r\n          onChange={(e) => setItinerary({...itinerary, destination: e.target.value})}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          type=\"date\"\r\n          label=\"Start Date\"\r\n          InputLabelProps={{ shrink: true }}\r\n          value={itinerary.startDate}\r\n          onChange={(e) => setItinerary({...itinerary, startDate: e.target.value})}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          type=\"date\"\r\n          label=\"End Date\"\r\n          InputLabelProps={{ shrink: true }}\r\n          value={itinerary.endDate}\r\n          onChange={(e) => setItinerary({...itinerary, endDate: e.target.value})}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <Button \r\n          type=\"submit\" \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          sx={{ mt: 2 }}\r\n          fullWidth\r\n        >\r\n          {id ? 'Update Itinerary' : 'Create Itinerary'}\r\n        </Button>\r\n      </Box>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        message={id ? \"Itinerary updated successfully!\" : \"Itinerary saved successfully!\"}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CreateItinerary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}